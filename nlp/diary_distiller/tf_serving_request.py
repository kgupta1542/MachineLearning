# -*- coding: utf-8 -*-
"""Preprocessing + POST Request

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l_6qF4B2z3sJAaNijCvuKo91mmcRx6O0
"""

import requests
#import tensorflow.keras.preprocessing as pre
!pip3 install keras_preprocessing

#both ways seem to work, but in diff. contexts?
import keras_preprocessing as pre
from keras_preprocessing import text, sequence

import json
import numpy as np
from google.colab import files

uploaded = files.upload()

print(uploaded['tokenizer.json'])
print(type(uploaded['tokenizer.json']))

#Returns input ready to be sent to TF Model
def preprocessing(input_string):
    #tokenizer = pre.text.tokenizer_from_json(uploaded['tokenizer.json'])
    tokenizer = text.tokenizer_from_json(uploaded['tokenizer.json'])
    tokenized_inputs = tokenizer.texts_to_sequences([input_string])
    #padded_inputs = pre.sequence.pad_sequences(tokenized_inputs, maxlen=1000)
    padded_inputs = sequence.pad_sequences(tokenized_inputs, maxlen=1000)
    return padded_inputs

#Returns array with two doubles from TF Model prediction
def sendRequest(model_input):
  formatted_input = model_input.tolist()
  data = json.dumps({"instances": formatted_input})
  json_response = requests.post("http://diadist.herokuapp.com/v1/models/diarydistiller/versions/1:predict", data=data)
  response = json.loads(json_response.text)
  return response["predictions"][0]

def inferEmotion(input_string):
    tokenizer = pre.text.tokenizer_from_json(uploaded['tokenizer.json'])
    tokenized_inputs = tokenizer.texts_to_sequences([input_string])
    padded_inputs = pre.sequence.pad_sequences(tokenized_inputs, maxlen=1000)
    formatted_input = model_input.tolist()
    data = json.dumps({"instances": formatted_input})
    json_response = requests.post("http://diadist.herokuapp.com/v1/models/diarydistiller/versions/1:predict", data=data)
    response = json.loads(json_response.text)
    return response["predictions"][0]

"""input_string = "Man, I raelly hate when all these people just come up to me like what are you doing fool. I know what I'm up to you, all right? I don't need everyone on my back telling me how to"
model_input = preprocessing(input_string)
response = sendRequest(model_input)
print(response)

print(inferEmotion(input_string))

input_string = "Do NOT watch expecting anything beyond this."
model_input = preprocessing(input_string)
response = sendRequest(model_input)
print(response)"""

input_string = "I am happy."
model_input = preprocessing(input_string)
response = sendRequest(model_input)
print(response)

input_string = "I am very happy."
model_input = preprocessing(input_string)
response = sendRequest(model_input)
print(response)

input_string = "I am sad."
model_input = preprocessing(input_string)
response = sendRequest(model_input)
print(response)

"""
input_string = "I am very sad."
model_input = preprocessing(input_string)
response = sendRequest(model_input)
print(response)

input_string = "I am angry."
model_input = preprocessing(input_string)
response = sendRequest(model_input)
print(response)

input_string = "I am disappointed."
model_input = preprocessing(input_string)
response = sendRequest(model_input)
print(response)"""